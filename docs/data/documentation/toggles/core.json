{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Toggle","level":2,"type":"heading","text":"Toggle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Toggle"},{"type":"text","text":" represents a feature flag. It can be of "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int"},{"type":"text","text":", "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" or "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type. Strings can be treated as secure and therefore encrypted."}]},{"anchor":"Datasource","level":2,"type":"heading","text":"Datasource"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A local "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Datasource"},{"type":"text","text":" represents the base toggles configuration."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example:"}]},{"type":"codeListing","syntax":"json","code":["{","  \"toggles\": [","    {","      \"variable\": \"boolean_toggle\",","      \"bool\": true","    },","    {","      \"variable\": \"integer_toggle\",","      \"int\": 42","    },","    {","      \"variable\": \"string_toggle\",","      \"string\": \"Hello World\"","    },","    ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The keys hosting the values are "},{"type":"codeVoice","code":"bool"},{"type":"text","text":", "},{"type":"codeVoice","code":"int"},{"type":"text","text":", "},{"type":"codeVoice","code":"number"},{"type":"text","text":" (for decimal values), "},{"type":"codeVoice","code":"string"},{"type":"text","text":", "},{"type":"codeVoice","code":"secure"},{"type":"text","text":" (for encrypted values)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Providing a local datasource is mandatory."}]},{"anchor":"Providers","level":2,"type":"heading","text":"Providers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Providers are used to provide toggle values and are inspected in priority order."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The framework comes with the following 3 providers:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/LocalValueProvider"},{"type":"text","text":": provides values from a local datasource."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/InMemoryValueProvider"},{"type":"text","text":": provides values from a datasource kept in memory. Values are not persisted across restarts."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/PersistentValueProvider"},{"type":"text","text":": provides values from a datasource stored in the user defaults. Values are persisted across restarts and installations."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can implement your custom provider conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ValueProvider"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/MutableValueProvider"},{"type":"text","text":" that retrieves values from a datasource hosted on your backend or third-party service."}]},{"anchor":"Manager","level":2,"type":"heading","text":"Manager"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ToggleManager"},{"type":"text","text":" is the facade to interface with the toggles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a usage example:"}]},{"type":"codeListing","syntax":"swift","code":["let mutableValueProvider = PersistentValueProvider(userDefaults: .standard)","let myCustomValueProvider = try MyCustomValueProvider(url: customDatasourceUrl)","let datasourceUrl = Bundle.main.url(forResource: \"DefaultDatasource\", withExtension: \"json\")!","","try ToggleManager(mutableValueProvider: mutableValueProvider,","                  valueProviders: [myCustomValueProvider],","                  datasourceUrl: datasourceUrl)"]},{"anchor":"Retrieving-values-and-observing-changes","level":2,"type":"heading","text":"Retrieving values and observing changes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Values can be retrieved in a sync fashion like so:"}]},{"type":"codeListing","syntax":"swift","code":["let shouldEnableFeatureX = manager.value(for: \"enable_feature_x\").boolValue","let welcomeText = manager.value(for: \"welcome_text\").stringValue"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"or via publishers created on demand and managed by the manager:"}]},{"type":"codeListing","syntax":"swift","code":["private var cancellables: Set<AnyCancellable> = []","","manager.publisher(for: \"enable_feature_x\")","    .sink { value in","        if case .bool(let boolValue) = value {","            \/\/ use `boolValue`","        }","    }","    .store(in: &cancellables)"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ToggleManager"},{"type":"text","text":" looks for the toggle in the elements of "},{"type":"codeVoice","code":"valueProviders"},{"type":"text","text":" following the order of the array.  If a "},{"type":"codeVoice","code":"MutableValueProvider"},{"type":"text","text":" is provided to the "},{"type":"codeVoice","code":"ToggleManager"},{"type":"text","text":" instance, the manager will first search for the toggle in it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using publishers is particularly useful when toggles can change unexpectedly for example via a remote configuration update and it’s desirable to immediately reflect the changes in the app."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A handy "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ToggleObservable"},{"type":"text","text":" is available which is particularly useful for SwiftUI code."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ View init","self.stringObservable = ToggleObservable(manager: manager, variable: ToggleVariables.stringToggle)","","\/\/ SwiftUI","Text(stringObservable.stringValue!)"]},{"anchor":"Secure-toggles","level":2,"type":"heading","text":"Secure toggles"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You might need to encrypt the toggle values if they contain API keys, tokens, or any sensitive information."},{"type":"text","text":" "},{"type":"text","text":"Secure toggles have the value for the "},{"type":"codeVoice","code":"secure"},{"type":"text","text":" key set to an encrypted value."}]},{"type":"codeListing","syntax":"json","code":["{","  \"variable\": \"encrypted_toggle\",","  \"secure\": \"eDUxAQXW6dobqAMxhZIJLkyQKb8+36bFHc36eabacXDahMipVnGy\/Q==\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the datasource contains secure toggles, a cipher configuration must be provided to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ToggleManager"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let cipherConfiguration = CipherConfiguration(algorithm: .chaCha20Poly1305,","                                              key: \"AyUcYw-qWebYF-z0nWZ4\")","try ToggleManager(valueProviders: [],","                  datasourceUrl: datasourceUrl,","                  cipherConfiguration: cipherConfiguration)"]},{"anchor":"Code-Generation","level":2,"type":"heading","text":"Code Generation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ToggleGen"},{"type":"text","text":" tool is available and extremely convenient to generate toggle accessors."},{"type":"text","text":" "},{"type":"text","text":"Please refer to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Tools"},{"type":"text","text":" article for more information."}]},{"anchor":"Performance","level":2,"type":"heading","text":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggles has very high performance and it can load and filter huge datasources in a breeze."},{"type":"text","text":" "},{"type":"text","text":"It also uses a write-through cache but you don’t need to know about that."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/toggles\/core"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Toggles\/documentation\/Toggles\/Core","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"In this article, we cover all the concepts required to understand how the framework operates."}],"kind":"article","metadata":{"modules":[{"name":"Toggles"}],"role":"collectionGroup","title":"Core"},"hierarchy":{"paths":[["doc:\/\/Toggles\/documentation\/Toggles"]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/Toggles","doc:\/\/Toggles\/documentation\/Toggles\/UI","doc:\/\/Toggles\/documentation\/Toggles\/Tools"]},{"title":"Models","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/Toggle","doc:\/\/Toggles\/documentation\/Toggles\/Datasource","doc:\/\/Toggles\/documentation\/Toggles\/Metadata","doc:\/\/Toggles\/documentation\/Toggles\/Variable","doc:\/\/Toggles\/documentation\/Toggles\/Value"]},{"title":"Providers","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/ValueProvider","doc:\/\/Toggles\/documentation\/Toggles\/MutableValueProvider","doc:\/\/Toggles\/documentation\/Toggles\/LocalValueProvider","doc:\/\/Toggles\/documentation\/Toggles\/InMemoryValueProvider","doc:\/\/Toggles\/documentation\/Toggles\/PersistentValueProvider"]},{"title":"Facades","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/ToggleManager"]},{"title":"Ciphering","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/CipherConfiguration"]},{"title":"Observables","identifiers":["doc:\/\/Toggles\/documentation\/Toggles\/ToggleObservable"]}],"references":{"doc://Toggles/documentation/Toggles/Tools":{"role":"collectionGroup","title":"Tools","abstract":[{"type":"text","text":"Toggles comes with some secondary tools in the form of packages."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Tools","kind":"article","type":"topic","url":"\/documentation\/toggles\/tools"},"doc://Toggles/documentation/Toggles/Variable":{"role":"symbol","title":"Variable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variable"}],"abstract":[{"type":"text","text":"Alias to better refer to the concept of variable."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Variable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variable"}],"url":"\/documentation\/toggles\/variable"},"doc://Toggles/documentation/Toggles/Metadata":{"role":"symbol","title":"Metadata","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Metadata"}],"abstract":[{"type":"text","text":"Model containing metadata information for a toggle."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Metadata","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Metadata"}],"url":"\/documentation\/toggles\/metadata"},"doc://Toggles/documentation/Toggles/UI":{"role":"collectionGroup","title":"UI","abstract":[{"type":"text","text":"Toggles provides a view to list and modify toggles."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/UI","kind":"article","type":"topic","url":"\/documentation\/toggles\/ui"},"doc://Toggles/documentation/Toggles/TogglesView":{"role":"symbol","title":"TogglesView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TogglesView"}],"abstract":[{"type":"text","text":"A view showcasing all toggles from a provided datasource."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/TogglesView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TogglesView"}],"url":"\/documentation\/toggles\/togglesview"},"doc://Toggles/documentation/Toggles/PersistentValueProvider":{"role":"symbol","title":"PersistentValueProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistentValueProvider"}],"abstract":[{"type":"text","text":"Mutable value provider that persists toggles in the user defaults."},{"type":"text","text":" "},{"type":"text","text":"Alterations to toggles are therefore persisted across app restars and installations."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/PersistentValueProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistentValueProvider"}],"url":"\/documentation\/toggles\/persistentvalueprovider"},"doc://Toggles/documentation/Toggles":{"role":"collection","title":"Toggles","abstract":[],"identifier":"doc:\/\/Toggles\/documentation\/Toggles","kind":"symbol","type":"topic","url":"\/documentation\/toggles"},"doc://Toggles/documentation/Toggles/ToggleObservable":{"role":"symbol","title":"ToggleObservable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToggleObservable"}],"abstract":[{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" tied to a toggle that publishes updates whenever its value changes."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ToggleObservable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToggleObservable"}],"url":"\/documentation\/toggles\/toggleobservable"},"doc://Toggles/documentation/Toggles/LocalValueProvider":{"role":"symbol","title":"LocalValueProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalValueProvider"}],"abstract":[{"type":"text","text":"Value provider with a local datasource."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/LocalValueProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocalValueProvider"}],"url":"\/documentation\/toggles\/localvalueprovider"},"doc://Toggles/documentation/Toggles/ValueProvider":{"role":"symbol","title":"ValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueProvider"}],"abstract":[{"type":"text","text":"Protocol to be implemented by custom value providers."},{"type":"text","text":" "},{"type":"text","text":"A ValueProvider allows retrieving values for given variables."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ValueProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueProvider"}],"url":"\/documentation\/toggles\/valueprovider"},"doc://Toggles/documentation/Toggles/ToggleManager":{"role":"symbol","title":"ToggleManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToggleManager"}],"abstract":[{"type":"text","text":"Thread-safe facade to interface with toggles."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/ToggleManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToggleManager"}],"url":"\/documentation\/toggles\/togglemanager"},"doc://Toggles/documentation/Toggles/MutableValueProvider":{"role":"symbol","title":"MutableValueProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableValueProvider"}],"abstract":[{"type":"text","text":"Protocol to be implemented by custom mutable value providers."},{"type":"text","text":" "},{"type":"text","text":"A MutableValueProvider is a ValueProvider that allows settings and deleting values for given variables."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/MutableValueProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableValueProvider"}],"url":"\/documentation\/toggles\/mutablevalueprovider"},"doc://Toggles/documentation/Toggles/Toggle":{"role":"symbol","title":"Toggle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Toggle"}],"abstract":[{"type":"text","text":"Model representing a toggle."},{"type":"text","text":" "},{"type":"text","text":"Toggles represent feature\/configuration flags. At their core, they are a key-value pairs where the key, due to the context, is called variable."},{"type":"text","text":" "},{"type":"text","text":"Metadata information is used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/TogglesView"},{"type":"text","text":" for the purpose of visualization."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Toggle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Toggle"}],"url":"\/documentation\/toggles\/toggle"},"doc://Toggles/documentation/Toggles/Datasource":{"role":"symbol","title":"Datasource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Datasource"}],"abstract":[{"type":"text","text":"Model representing an array of toggles."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Datasource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Datasource"}],"url":"\/documentation\/toggles\/datasource"},"doc://Toggles/documentation/Toggles/Toggles":{"role":"collectionGroup","title":"Toggles","abstract":[{"type":"text","text":"Toggles is an elegant and powerful solution to feature flagging for Apple platforms."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Toggles","kind":"article","type":"topic","url":"\/documentation\/toggles\/toggles"},"doc://Toggles/documentation/Toggles/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"Value associated with a toggle."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/Value","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Value"}],"url":"\/documentation\/toggles\/value"},"doc://Toggles/documentation/Toggles/InMemoryValueProvider":{"role":"symbol","title":"InMemoryValueProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InMemoryValueProvider"}],"abstract":[{"type":"text","text":"Mutable value provider that stores toggles in memory."},{"type":"text","text":" "},{"type":"text","text":"Alterations to toggles are not persisted."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/InMemoryValueProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InMemoryValueProvider"}],"url":"\/documentation\/toggles\/inmemoryvalueprovider"},"doc://Toggles/documentation/Toggles/CipherConfiguration":{"role":"symbol","title":"CipherConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CipherConfiguration"}],"abstract":[{"type":"text","text":"Configuration describing what cipher algorigthm use for encrypting and decrypting secure toggles."}],"identifier":"doc:\/\/Toggles\/documentation\/Toggles\/CipherConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CipherConfiguration"}],"url":"\/documentation\/toggles\/cipherconfiguration"}}}