//  TestToggleAccessor.swift

// swiftlint:disable file_length

import Foundation
import Toggles

package class TestToggleAccessor {
    
    private(set) var manager: ToggleManager
    
    package init(manager: ToggleManager) {
        self.manager = manager
    }
}

extension TestToggleAccessor {

    package var booleanToggle: Bool {
        get { manager.value(for: TestVariables.booleanToggle).boolValue! }
        set { manager.set(.bool(newValue), for: TestVariables.booleanToggle) }
    }

    package var integerToggle: Int {
        get { manager.value(for: TestVariables.integerToggle).intValue! }
        set { manager.set(.int(newValue), for: TestVariables.integerToggle) }
    }

    package var numericToggle: Double {
        get { manager.value(for: TestVariables.numericToggle).numberValue! }
        set { manager.set(.number(newValue), for: TestVariables.numericToggle) }
    }

    package var stringToggle: String {
        get { manager.value(for: TestVariables.stringToggle).stringValue! }
        set { manager.set(.string(newValue), for: TestVariables.stringToggle) }
    }

    package var encryptedToggle: String {
        get { manager.value(for: TestVariables.encryptedToggle).secureValue! }
        set { manager.set(.secure(newValue), for: TestVariables.encryptedToggle) }
    }

    package var userDefinedBooleanToggle: Bool {
        get { manager.value(for: TestVariables.booleanToggle2).boolValue! }
        set { manager.set(.bool(newValue), for: TestVariables.booleanToggle2) }
    }

    package var userDefinedIntegerToggle: Int {
        get { manager.value(for: TestVariables.integerToggle2).intValue! }
        set { manager.set(.int(newValue), for: TestVariables.integerToggle2) }
    }

    package var userDefinedNumericToggle: Double {
        get { manager.value(for: TestVariables.numericToggle2).numberValue! }
        set { manager.set(.number(newValue), for: TestVariables.numericToggle2) }
    }

    package var userDefinedStringToggle: String {
        get { manager.value(for: TestVariables.stringToggle2).stringValue! }
        set { manager.set(.string(newValue), for: TestVariables.stringToggle2) }
    }

}

// swiftlint:enable file_length
